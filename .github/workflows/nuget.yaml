name: Build, Pack, and Publish NuGet Package

on:
  push:
    branches:
      - '*'  # Tüm dallarda yapılan push'lar tetikler
    paths:
      - '**/*'  # Tüm dosya değişiklikleri workflow'u tetikler
env:
  PROJECT_PATH: 'ConsoleApp12/ConsoleApp12.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'

jobs:
  build-pack-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Extract Version from Git Tag or Branch
        id: extract_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}  # Tagden versiyon al
          elif [[ "${GITHUB_REF}" == refs/heads/main ]]; then
            VERSION="1.0.0"  # Main branch için
          else
            VERSION="dev"  # Diğer branchler için
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Restore Dependencies
        run: dotnet restore ConsoleApp12/ConsoleApp12.csproj

      - name: 'Get Version'
        id: version
        uses: battila7/get-version-action@v2
        
      - name: Build LinqApi Project
        run: dotnet build ConsoleApp12/ConsoleApp12.csproj --configuration Release --no-restore



      - name: Pack NuGet Package
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release --include-symbols -p:PackageVersion=1.0.2 --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}


      - name: Publish NuGet Package
        run: dotnet nuget push /home/runner/work/ConsoleApp12/ConsoleApp12output/ConsoleApp12.1.0.2.nupkg -k ${{ secrets.NUGET_AUTH_TOKEN }} -s ${{ env.NUGET_SOURCE_URL }}